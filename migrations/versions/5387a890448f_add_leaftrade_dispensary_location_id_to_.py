"""Add leaftrade_dispensary_location_id to LocationMapping

Revision ID: 5387a890448f
Revises: c159292fbe69
Create Date: 2025-08-05 11:18:22.392242

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5387a890448f'
down_revision = 'c159292fbe69'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('location_mapping', schema=None) as batch_op:
        # Add column as nullable first
        batch_op.add_column(sa.Column('leaftrade_dispensary_location_id', sa.Integer(), nullable=True))
    
    # Populate the new column with a default value for existing records
    # For now, we'll use a placeholder value that indicates these need to be updated
    op.execute("UPDATE location_mapping SET leaftrade_dispensary_location_id = -1 WHERE leaftrade_dispensary_location_id IS NULL")
    
    with op.batch_alter_table('location_mapping', schema=None) as batch_op:
        # Now make it NOT NULL
        batch_op.alter_column('leaftrade_dispensary_location_id', nullable=False)
        batch_op.drop_constraint(batch_op.f('unique_location_mapping'), type_='unique')
        batch_op.create_unique_constraint('unique_location_mapping', ['leaftrade_dispensary_location_id', 'biotrack_vendor_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('location_mapping', schema=None) as batch_op:
        batch_op.drop_constraint('unique_location_mapping', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('unique_location_mapping'), ['customer_id', 'biotrack_vendor_id'], postgresql_nulls_not_distinct=False)
        batch_op.drop_column('leaftrade_dispensary_location_id')

    # ### end Alembic commands ###
